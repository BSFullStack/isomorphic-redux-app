import express from 'express';
import  mongoose from 'mongoose';
import bodyParser from 'body-parser';

const  router = express.Router();
const jsonParser = bodyParser.json()


module.exports= function (app) {

    app.use("/topics",router);
};

router.post('/get', function (req, res) {
   var data = {
    "kind": "Listing",
    "data": {
        "modhash": "",
        "children": [
            {
                "kind": "t3",
                "data": {
                    "domain": "self.reactjs",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": null,
                    "selftext": "",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xvvzn",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "solarparade",
                    "media": null,
                    "score": 31,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "num_comments": 9,
                    "thumbnail": "self",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "stickied": true,
                    "from": null,
                    "is_self": true,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xvvzn/what_are_some_welldocumented_react_codebases_i/",
                    "locked": false,
                    "name": "t3_3xvvzn",
                    "created": 1450849615,
                    "url": "https://www.reddit.com/r/reactjs/comments/3xvvzn/what_are_some_welldocumented_react_codebases_i/",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "What are some well-documented React codebases I can read for learning purposes?",
                    "created_utc": 1450820815,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 31
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "medium.com",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": null,
                    "selftext": "",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3y19qv",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "matthewsilas",
                    "media": null,
                    "score": 9,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://i.redditmedia.com/20sVbeEbYP5Mq7Yfckyoosi_HrO8pNo_iGXOM4wFTXY.jpg?s=df9f8859ba6f1865e64bdb4461e705fb",
                                    "width": 500,
                                    "height": 250
                                },
                                "resolutions": [
                                    {
                                        "url": "https://i.redditmedia.com/20sVbeEbYP5Mq7Yfckyoosi_HrO8pNo_iGXOM4wFTXY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=dcab76f0517e5628b5748f28b6c91848",
                                        "width": 108,
                                        "height": 54
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/20sVbeEbYP5Mq7Yfckyoosi_HrO8pNo_iGXOM4wFTXY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=5ea262847305d7043638d7096bbce4a8",
                                        "width": 216,
                                        "height": 108
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/20sVbeEbYP5Mq7Yfckyoosi_HrO8pNo_iGXOM4wFTXY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=c6430014ea88722736a1a7c3ff1c6da5",
                                        "width": 320,
                                        "height": 160
                                    }
                                ],
                                "variants": {},
                                "id": "hMN56ajCEjEYQaAOSCWGXThx9vQ905wGJBh-iw6D820"
                            }
                        ]
                    },
                    "num_comments": 1,
                    "thumbnail": "http://b.thumbs.redditmedia.com/E651cD6ya7R-tlce6U945bBVBfkCVsa1Zi77RP6Dv6c.jpg",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "post_hint": "link",
                    "stickied": false,
                    "from": null,
                    "is_self": false,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3y19qv/productionready_webpack_configs_are_hard_i_wrote/",
                    "locked": false,
                    "name": "t3_3y19qv",
                    "created": 1450951786,
                    "url": "https://medium.com/@matt.krick/a-production-ready-realtime-saas-with-webpack-7b11ba2fa5b0#.wapt8f7rc",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "Production-ready webpack configs are hard. I wrote a blog to teach you how.",
                    "created_utc": 1450922986,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 9
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "self.reactjs",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I know I&amp;#39;m not presenting code and I apologize for that... But I am newbie at reactjs and I want to improve on reactjs to do app(from tutorial)... I want to do edit button(to make a change in array in comments.json file), don&amp;#39;t know how to do that. Can somebody please help&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "selftext": "I know I'm not presenting code and I apologize for that... But I am newbie at reactjs and I want to improve on reactjs to do app(from tutorial)... I want to do edit button(to make a change in array in comments.json file), don't know how to do that. Can somebody please help",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3y2msd",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "zabacitithrowaway",
                    "media": null,
                    "score": 1,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "num_comments": 0,
                    "thumbnail": "self",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": true,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "stickied": false,
                    "from": null,
                    "is_self": true,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3y2msd/how_to_do_edit_button_in_reactjs_to_do_app/",
                    "locked": false,
                    "name": "t3_3y2msd",
                    "created": 1450983916,
                    "url": "https://www.reddit.com/r/reactjs/comments/3y2msd/how_to_do_edit_button_in_reactjs_to_do_app/",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "How to do edit button in react.js to do app",
                    "created_utc": 1450955116,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 1
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "github.com",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": null,
                    "selftext": "",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xym0h",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "jchiedo",
                    "media": null,
                    "score": 23,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://i.redditmedia.com/3XtHtHStErRPDhod26vDrQwMKcqgVuiqhI7o2YEq_Hg.jpg?s=42ba51bd81c5e700c46560cf7e1204d4",
                                    "width": 400,
                                    "height": 400
                                },
                                "resolutions": [
                                    {
                                        "url": "https://i.redditmedia.com/3XtHtHStErRPDhod26vDrQwMKcqgVuiqhI7o2YEq_Hg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=ca0fbf428f2c1e24fc14169d610d898c",
                                        "width": 108,
                                        "height": 108
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/3XtHtHStErRPDhod26vDrQwMKcqgVuiqhI7o2YEq_Hg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=d2c97a7fa68a56b2b2eed6bc839d1569",
                                        "width": 216,
                                        "height": 216
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/3XtHtHStErRPDhod26vDrQwMKcqgVuiqhI7o2YEq_Hg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=64c167e6475239b68700c05ee4a0e66a",
                                        "width": 320,
                                        "height": 320
                                    }
                                ],
                                "variants": {},
                                "id": "eU8Uegf3hScO5m2mLwYJU3p3_5CYnoI8-FWfJYQiwMI"
                            }
                        ]
                    },
                    "num_comments": 2,
                    "thumbnail": "http://b.thumbs.redditmedia.com/sGfjB5MSLairaSveDaiVPsSvpWr19kMCMAdAAJ4ioeE.jpg",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "post_hint": "link",
                    "stickied": false,
                    "from": null,
                    "is_self": false,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xym0h/expectjsx_heck_yes/",
                    "locked": false,
                    "name": "t3_3xym0h",
                    "created": 1450906285,
                    "url": "https://github.com/algolia/expect-jsx",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "Expect-jsx = heck yes.",
                    "created_utc": 1450877485,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 23
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "self.reactjs",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Lots of people seem to like the idea of Falcor and that it has a solution for both local and remote state, but I can&amp;#39;t find a single github repos where someone is using it with react in a project.  Why do we see more Relay + GraphQL projects and what&amp;#39;s the problem with Falcor?  And lastly, is it really a solution to local state?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "selftext": "Lots of people seem to like the idea of Falcor and that it has a solution for both local and remote state, but I can't find a single github repos where someone is using it with react in a project.  Why do we see more Relay + GraphQL projects and what's the problem with Falcor?  And lastly, is it really a solution to local state?",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xyuiu",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "haterofallcats",
                    "media": null,
                    "score": 14,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "num_comments": 6,
                    "thumbnail": "self",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "stickied": false,
                    "from": null,
                    "is_self": true,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xyuiu/if_falcor_can_handle_both_local_and_remote_state/",
                    "locked": false,
                    "name": "t3_3xyuiu",
                    "created": 1450911023,
                    "url": "https://www.reddit.com/r/reactjs/comments/3xyuiu/if_falcor_can_handle_both_local_and_remote_state/",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "If Falcor can handle both local and remote state, why does no one seem to be using it?",
                    "created_utc": 1450882223,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 14
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "github.com",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": null,
                    "selftext": "",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xz7f0",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "casesandberg",
                    "media": null,
                    "score": 6,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://i.redditmedia.com/rZj_MBhXtpUd8HS8pIiWefbbQAaxCPPZBB1QbA71Q20.jpg?s=99483581ec4b43c12a663162b8139400",
                                    "width": 400,
                                    "height": 400
                                },
                                "resolutions": [
                                    {
                                        "url": "https://i.redditmedia.com/rZj_MBhXtpUd8HS8pIiWefbbQAaxCPPZBB1QbA71Q20.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=3fe04257a7718d1e0b98c427afdcceb8",
                                        "width": 108,
                                        "height": 108
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/rZj_MBhXtpUd8HS8pIiWefbbQAaxCPPZBB1QbA71Q20.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=b4ab614601ff3c6e5ff3530399f2e7e1",
                                        "width": 216,
                                        "height": 216
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/rZj_MBhXtpUd8HS8pIiWefbbQAaxCPPZBB1QbA71Q20.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=9e675e8ad6e0b6c603c37602360666a1",
                                        "width": 320,
                                        "height": 320
                                    }
                                ],
                                "variants": {},
                                "id": "x4T7hRMcHlkJEtEnFY_sPU6kuc8C5hO18faQWUzmA-E"
                            }
                        ]
                    },
                    "num_comments": 1,
                    "thumbnail": "http://b.thumbs.redditmedia.com/_gHQ2xo5-gXXxYSwcmJhzoSBstTbSzveYPvNj7k1nuQ.jpg",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "post_hint": "link",
                    "stickied": false,
                    "from": null,
                    "is_self": false,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xz7f0/react_mark_configurable_markdown_components_in/",
                    "locked": false,
                    "name": "t3_3xz7f0",
                    "created": 1450917239,
                    "url": "https://github.com/casesandberg/react-mark",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "React Mark - Configurable Markdown Components in React",
                    "created_utc": 1450888439,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 6
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "github.com",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": null,
                    "selftext": "",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3y0gd9",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "haterofallcats",
                    "media": null,
                    "score": 0,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://i.redditmedia.com/k8UpKpHoEbjRHH4XnTlc6zEnBcZiTk-3-pETbvjrtvk.jpg?s=637b382114b78246f83f7ece5f046dda",
                                    "width": 400,
                                    "height": 400
                                },
                                "resolutions": [
                                    {
                                        "url": "https://i.redditmedia.com/k8UpKpHoEbjRHH4XnTlc6zEnBcZiTk-3-pETbvjrtvk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=25b90fc45da5c164c85befba36e13ac6",
                                        "width": 108,
                                        "height": 108
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/k8UpKpHoEbjRHH4XnTlc6zEnBcZiTk-3-pETbvjrtvk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=61995a6aae25a72a467cf34a1a68fea2",
                                        "width": 216,
                                        "height": 216
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/k8UpKpHoEbjRHH4XnTlc6zEnBcZiTk-3-pETbvjrtvk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=af5e243665b3812dd0bf08d640bf2e07",
                                        "width": 320,
                                        "height": 320
                                    }
                                ],
                                "variants": {},
                                "id": "pMCfcdpViz5bqwz108uzmvq4soa3jrH7NRGhTbPG6XM"
                            }
                        ]
                    },
                    "num_comments": 1,
                    "thumbnail": "http://b.thumbs.redditmedia.com/lwScLMDX99ZdrhlQJHPC2bKiAcx3lxjExe0pCejUT4o.jpg",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "post_hint": "link",
                    "stickied": false,
                    "from": null,
                    "is_self": false,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3y0gd9/fluorine/",
                    "locked": false,
                    "name": "t3_3y0gd9",
                    "created": 1450937158,
                    "url": "https://github.com/philplckthun/fluorine/blob/master/README.md",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "Fluorine",
                    "created_utc": 1450908358,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 0
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "gist.github.com",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": null,
                    "selftext": "",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3y059p",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "diaraujo13",
                    "media": null,
                    "score": 1,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://i.redditmedia.com/1L9AUqYuBP0Y9FRyk0pyVTHLZT0p9_WhgcbHx09uApM.jpg?s=1aef9f9c016e04a57fe7541205337337",
                                    "width": 420,
                                    "height": 420
                                },
                                "resolutions": [
                                    {
                                        "url": "https://i.redditmedia.com/1L9AUqYuBP0Y9FRyk0pyVTHLZT0p9_WhgcbHx09uApM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=28f9c39ed7b171880b9d7e2e99ee14ad",
                                        "width": 108,
                                        "height": 108
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/1L9AUqYuBP0Y9FRyk0pyVTHLZT0p9_WhgcbHx09uApM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=1fbec8fe32f330daf4d77929f4e33aca",
                                        "width": 216,
                                        "height": 216
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/1L9AUqYuBP0Y9FRyk0pyVTHLZT0p9_WhgcbHx09uApM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=8ad9c244770021cd38a065b95cb1e1de",
                                        "width": 320,
                                        "height": 320
                                    }
                                ],
                                "variants": {},
                                "id": "Mr8UIvEGcr-B0245P8V5MNlfeTNx_Efxc9QfDNGMLqE"
                            }
                        ]
                    },
                    "num_comments": 0,
                    "thumbnail": "http://b.thumbs.redditmedia.com/IMAQ1G-l_DVpWDiEyo1g68L8darvgkp85zzkbXG5pdw.jpg",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "post_hint": "link",
                    "stickied": false,
                    "from": null,
                    "is_self": false,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3y059p/help_after_using_indexroute_all_my_link_doesnt/",
                    "locked": false,
                    "name": "t3_3y059p",
                    "created": 1450932031,
                    "url": "https://gist.github.com/diaraujo13/6d098fd574c406ccbfdb",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "HELP! After using &lt;IndexRoute /&gt;, all my &lt;Link/&gt; doesn't render their contents",
                    "created_utc": 1450903231,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 1
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "github.com",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": null,
                    "selftext": "",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xwgi5",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "brianvaughn",
                    "media": null,
                    "score": 20,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://i.redditmedia.com/2IzJh-39ilOnW3WBZBY3ItbH9lVfggu8mTXLBIeXxlk.jpg?s=6a6b4073b316b3602a64485295c6d5bc",
                                    "width": 400,
                                    "height": 400
                                },
                                "resolutions": [
                                    {
                                        "url": "https://i.redditmedia.com/2IzJh-39ilOnW3WBZBY3ItbH9lVfggu8mTXLBIeXxlk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=f31e31e1f00ac39512a524893dc2f614",
                                        "width": 108,
                                        "height": 108
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/2IzJh-39ilOnW3WBZBY3ItbH9lVfggu8mTXLBIeXxlk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=6cbf6bff1735025c79abd1e387bebf9f",
                                        "width": 216,
                                        "height": 216
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/2IzJh-39ilOnW3WBZBY3ItbH9lVfggu8mTXLBIeXxlk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=3b22445395627509bf6ae0228cda0bc7",
                                        "width": 320,
                                        "height": 320
                                    }
                                ],
                                "variants": {},
                                "id": "aI72qw8BhP5UhDtQXZ_S4HB7ECXpTXkE5oKqPT-_lD0"
                            }
                        ]
                    },
                    "num_comments": 3,
                    "thumbnail": "http://b.thumbs.redditmedia.com/k9wT2fXNYJ6BN8ap_5BtQO7rur8okCWyaFe5ra3JSZc.jpg",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "post_hint": "link",
                    "stickied": false,
                    "from": null,
                    "is_self": false,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xwgi5/recommendations_for_best_practices_regarding/",
                    "locked": false,
                    "name": "t3_3xwgi5",
                    "created": 1450858749,
                    "url": "https://github.com/rackt/redux/issues/1171",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "Recommendations for best practices regarding action-creators, reducers, and selectors",
                    "created_utc": 1450829949,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 20
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "angularclass.com",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": null,
                    "selftext": "",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xz1pt",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "gdi2290",
                    "media": null,
                    "score": 1,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "num_comments": 7,
                    "thumbnail": "default",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "stickied": false,
                    "from": null,
                    "is_self": false,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xz1pt/angular_2_for_react_developers_via_angularlass/",
                    "locked": false,
                    "name": "t3_3xz1pt",
                    "created": 1450914545,
                    "url": "https://angularclass.com/angular-2-for-react-developers/",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "Angular 2 for React Developers via @Angularlass",
                    "created_utc": 1450885745,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 1
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "github.com",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": null,
                    "selftext": "",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xu39m",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "-Alias-",
                    "media": null,
                    "score": 37,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://i.redditmedia.com/8j8UEHSVGC9rJUIzIQg2HGExnqTBoKbhEQk5zoL5i40.jpg?s=1350b3a63b0daccfe2bc86e868151da3",
                                    "width": 400,
                                    "height": 400
                                },
                                "resolutions": [
                                    {
                                        "url": "https://i.redditmedia.com/8j8UEHSVGC9rJUIzIQg2HGExnqTBoKbhEQk5zoL5i40.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=0279795e53eac1ec56e7281723f48c6d",
                                        "width": 108,
                                        "height": 108
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/8j8UEHSVGC9rJUIzIQg2HGExnqTBoKbhEQk5zoL5i40.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=56ce9f9e747caedb5d7d6b4d80e06351",
                                        "width": 216,
                                        "height": 216
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/8j8UEHSVGC9rJUIzIQg2HGExnqTBoKbhEQk5zoL5i40.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=cc894f24d909dd29b9e00fc3326f40b9",
                                        "width": 320,
                                        "height": 320
                                    }
                                ],
                                "variants": {},
                                "id": "tRQCYeMucpTXhAqRXGmOVG1CNQIlIN3sSN5kyq2jWSE"
                            }
                        ]
                    },
                    "num_comments": 5,
                    "thumbnail": "http://b.thumbs.redditmedia.com/-FGV6AEAZHTEzQOpQy2d3FWPZgqTo4PTjKp-TCskV_o.jpg",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "post_hint": "link",
                    "stickied": false,
                    "from": null,
                    "is_self": false,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xu39m/react_native_material_design_ui_components_for/",
                    "locked": false,
                    "name": "t3_3xu39m",
                    "created": 1450821928,
                    "url": "https://github.com/react-native-material-design/react-native-material-design",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "React Native Material Design - UI components for React Native",
                    "created_utc": 1450793128,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 37
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "pincer.io",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": null,
                    "selftext": "",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xvd6f",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "javascripton",
                    "media": null,
                    "score": 6,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "num_comments": 0,
                    "thumbnail": "default",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "stickied": false,
                    "from": null,
                    "is_self": false,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xvd6f/best_reactjs_modules/",
                    "locked": false,
                    "name": "t3_3xvd6f",
                    "created": 1450841939,
                    "url": "http://pincer.io/node/keywords/ReactJS/best",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "Best ReactJS Modules",
                    "created_utc": 1450813139,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 6
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "github.com",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": null,
                    "selftext": "",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xvhto",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "olegakbarov",
                    "media": null,
                    "score": 3,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://i.redditmedia.com/2QrDa7zu7tEGKKciNKQds45gSUXQv7qK5dhKI4c0Bbw.jpg?s=22945521379b6c55394284bb30c82736",
                                    "width": 400,
                                    "height": 400
                                },
                                "resolutions": [
                                    {
                                        "url": "https://i.redditmedia.com/2QrDa7zu7tEGKKciNKQds45gSUXQv7qK5dhKI4c0Bbw.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=3d4293b6c97366dd6b066c1094513b7e",
                                        "width": 108,
                                        "height": 108
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/2QrDa7zu7tEGKKciNKQds45gSUXQv7qK5dhKI4c0Bbw.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=29fc83a3f6940ba19817725c65650943",
                                        "width": 216,
                                        "height": 216
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/2QrDa7zu7tEGKKciNKQds45gSUXQv7qK5dhKI4c0Bbw.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=c3011c7ac3713f088a6ebc649c9da946",
                                        "width": 320,
                                        "height": 320
                                    }
                                ],
                                "variants": {},
                                "id": "xt7EZMBfA3WYhmU2fO_RsgR51rqOqZgF5Lq_xCbkB7I"
                            }
                        ]
                    },
                    "num_comments": 0,
                    "thumbnail": "http://b.thumbs.redditmedia.com/5_QeOS7wGPJl9lpwnmFOLDP0Ozg8ScAYfSxi0gelxoE.jpg",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "post_hint": "link",
                    "stickied": false,
                    "from": null,
                    "is_self": false,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xvhto/react_component_boilerplate_with_babel_6_flow_and/",
                    "locked": false,
                    "name": "t3_3xvhto",
                    "created": 1450843810,
                    "url": "https://github.com/olegakbarov/react-component-boilerplate",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "React Component boilerplate with Babel 6, Flow and hot-reloading via babel-plugin-react-transform",
                    "created_utc": 1450815010,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 3
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "self.reactjs",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello!&lt;/p&gt;\n\n&lt;p&gt;Please first foremost, I apologize for my english.  I am studying english for only last 1 years, but it is not a excuse for the poor quality.  sorry.&lt;/p&gt;\n\n&lt;p&gt;I am decided to learning reactjs after classes on javascript.  On Saturday Sunday I have been reading about reactjs.  Yesterday and today I have taken the initial steps and done the setting for my project and built a small application whereby I have just two components:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;InputForm - this is where information is entered.  right now, entering only 3 things which are name and, favorite subject.  onSubmit, the information is stored into object userDetails from initial state.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;ShowDetails - I show favorite subjects and who is in that group.  I have basic functionality so actually only hardcode 4 subjects, and thus just using that..&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Question is how to plan which components will be using in the app?  Next, I want to do is make a post and display posts on the page.  Only simple like that, then I will learn how I can click on the post to open modal or similar.&lt;/p&gt;\n\n&lt;p&gt;But for that only how to plan because otherwise I feel it will become too much junky.  &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "selftext": "Hello!\n\nPlease first foremost, I apologize for my english.  I am studying english for only last 1 years, but it is not a excuse for the poor quality.  sorry.\n\nI am decided to learning reactjs after classes on javascript.  On Saturday Sunday I have been reading about reactjs.  Yesterday and today I have taken the initial steps and done the setting for my project and built a small application whereby I have just two components:\n\n* InputForm - this is where information is entered.  right now, entering only 3 things which are name and, favorite subject.  onSubmit, the information is stored into object userDetails from initial state.\n\n* ShowDetails - I show favorite subjects and who is in that group.  I have basic functionality so actually only hardcode 4 subjects, and thus just using that..\n\nQuestion is how to plan which components will be using in the app?  Next, I want to do is make a post and display posts on the page.  Only simple like that, then I will learn how I can click on the post to open modal or similar.\n\nBut for that only how to plan because otherwise I feel it will become too much junky.  ",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xwel7",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "abhijit_pippal",
                    "media": null,
                    "score": 1,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "num_comments": 5,
                    "thumbnail": "self",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "stickied": false,
                    "from": null,
                    "is_self": true,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xwel7/learning_using_reactjs_and_wondering_how_it_is/",
                    "locked": false,
                    "name": "t3_3xwel7",
                    "created": 1450857868,
                    "url": "https://www.reddit.com/r/reactjs/comments/3xwel7/learning_using_reactjs_and_wondering_how_it_is/",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "Learning using reactjs and wondering how it is you plan components",
                    "created_utc": 1450829068,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 1
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "self.reactjs",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have some understanding about css and html. I once learnt c++ and core java.. I never did any programming after that. I&amp;#39;d like to know if I should first learn html css and Javascript, become an expert, and then learn react? Or can I start right away with reactjs?&lt;/p&gt;\n\n&lt;p&gt;Please help! &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "selftext": "I have some understanding about css and html. I once learnt c++ and core java.. I never did any programming after that. I'd like to know if I should first learn html css and Javascript, become an expert, and then learn react? Or can I start right away with reactjs?\n\nPlease help! ",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xuxw6",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "Coffeebrown87",
                    "media": null,
                    "score": 3,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "num_comments": 5,
                    "thumbnail": "self",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "stickied": false,
                    "from": null,
                    "is_self": true,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xuxw6/how_should_a_beginner_programmer_start_learning/",
                    "locked": false,
                    "name": "t3_3xuxw6",
                    "created": 1450835754,
                    "url": "https://www.reddit.com/r/reactjs/comments/3xuxw6/how_should_a_beginner_programmer_start_learning/",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "How should a beginner programmer start learning React?",
                    "created_utc": 1450806954,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 3
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "twitter.com",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": null,
                    "selftext": "",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xuqt1",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "thekenwheeler",
                    "media": null,
                    "score": 2,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://i.redditmedia.com/9NFCwyCcxci8yvJMqW3bN_U1nZvlk3zptem0F2PiqYw.jpg?s=0d94359ed276dafdefca6301a3da8db2",
                                    "width": 600,
                                    "height": 1066
                                },
                                "resolutions": [
                                    {
                                        "url": "https://i.redditmedia.com/9NFCwyCcxci8yvJMqW3bN_U1nZvlk3zptem0F2PiqYw.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=e4802ad92b672d09d3410c18f4c45ba4",
                                        "width": 108,
                                        "height": 191
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/9NFCwyCcxci8yvJMqW3bN_U1nZvlk3zptem0F2PiqYw.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=777a69f9dd2ad6bbdba204f1f6837cb7",
                                        "width": 216,
                                        "height": 383
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/9NFCwyCcxci8yvJMqW3bN_U1nZvlk3zptem0F2PiqYw.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=96efd2fb7a5f91a0b4b669997b8c0392",
                                        "width": 320,
                                        "height": 568
                                    }
                                ],
                                "variants": {},
                                "id": "4wxWU4N8CP0_9fL0PAG6ghsw1rIeih19OuTwrHOjUQE"
                            }
                        ]
                    },
                    "num_comments": 1,
                    "thumbnail": "http://b.thumbs.redditmedia.com/vPkYNv-dAWmFP7hbeyMZ3J-YFoGP2GRkanz0DPSfJAg.jpg",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "post_hint": "link",
                    "stickied": false,
                    "from": null,
                    "is_self": false,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xuqt1/react_native_duck_hunt/",
                    "locked": false,
                    "name": "t3_3xuqt1",
                    "created": 1450832826,
                    "url": "https://twitter.com/ken_wheeler/status/679138429893017600/video/1",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "React Native Duck Hunt",
                    "created_utc": 1450804026,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 2
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "self.reactjs",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt;\nI just tamed webpack using webpack-stream in gulp, with babel-loader in it. This abstracts webpack enough for me to not bother much about it and use it as some other gulp plugin that transforms my React codebase into bundle.js. CSS and other assets are included to HTML normally. I strongly believe things will change in a year or two making all this irrelevant, but gulp/task-runners will remain, making this approach kinda future proof. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;gulp.task(&amp;#39;webpack&amp;#39;, cb =&amp;gt; {\n  // takes components/App/App.js and gets it bundled into client/bundle.js\n  return gulp.src(&amp;#39;components/App/App.js&amp;#39;)\n  .pipe(webpackStream(webpackConfig))\n  .pipe(gulp.dest(&amp;#39;client/&amp;#39;));\n});\n// webpack config with babel&amp;#39;s react and es2015 presets, and some optimizations.\n// bundles into client/bundle.js\nconst webpackConfig = {\n  module: {\n    loaders: [\n      { \n        test: /\\.jsx?$/,\n        loader: &amp;#39;babel-loader&amp;#39;,\n        exclude: /(node_modules|bower_components)/,\n        include: /components/,\n        query: {\n          presets: [&amp;#39;react&amp;#39;, &amp;#39;es2015&amp;#39;],\n        }\n      }\n    ]\n  },\n  plugins: [\n    new webpack.DefinePlugin({\n      &amp;#39;process.env&amp;#39;: {\n        &amp;#39;NODE_ENV&amp;#39;: JSON.stringify(&amp;#39;production&amp;#39;)\n      }\n    }),\n    new webpack.optimize.OccurenceOrderPlugin(),\n    new webpack.optimize.UglifyJsPlugin(),\n  ],\n  output: {\n    filename: &amp;#39;bundle.js&amp;#39;\n  }\n};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;OLD: &lt;/p&gt;\n\n&lt;p&gt;Okay, so this is what is bugging me:&lt;/p&gt;\n\n&lt;p&gt;Having just a single js file that controls everything from jquery to bootstrap to react to my own components to even images, css and fonts, seems to be very scary thing to do. Browsers in my opinion handle all that very nicely, but including CSS into a style tag via JS seems to be obviously slower with not many benefits, not to mention several build processes required to do something which 2 script tags and 1 link tag were doing previously. &lt;/p&gt;\n\n&lt;p&gt;I find all this really complicated as opposed to webcomponents strategy where HTML is in HTML, JS in JS and CSS in CSS. &lt;/p&gt;\n\n&lt;p&gt;Is this really all about the ease of using &lt;code&gt;import/export&lt;/code&gt; and &lt;code&gt;require&lt;/code&gt;ing everything? &lt;/p&gt;\n\n&lt;p&gt;Honestly I get overwhelmed by all the processes needed to create a simple webapp using react, and can&amp;#39;t follow much. I tried understand react-starter-kit but then again it was beyond my understanding ! My patience broke when I just wanted to add a backgroundImage to a div tag using a local image! &lt;/p&gt;\n\n&lt;p&gt;Can someone explain to me why this single &lt;code&gt;bundle.js&lt;/code&gt; era is becoming popular and how is it better than the traditional ways of creating web apps? Are there any sources that breakdown react-starter-kit in a simpler way to understand?&lt;/p&gt;\n\n&lt;p&gt;Sorry for not being able to clearly explain my doubts coz I&amp;#39;m hell confused. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "selftext": "**UPDATE:**\nI just tamed webpack using webpack-stream in gulp, with babel-loader in it. This abstracts webpack enough for me to not bother much about it and use it as some other gulp plugin that transforms my React codebase into bundle.js. CSS and other assets are included to HTML normally. I strongly believe things will change in a year or two making all this irrelevant, but gulp/task-runners will remain, making this approach kinda future proof. \n\n\n    gulp.task('webpack', cb =&gt; {\n      // takes components/App/App.js and gets it bundled into client/bundle.js\n      return gulp.src('components/App/App.js')\n      .pipe(webpackStream(webpackConfig))\n      .pipe(gulp.dest('client/'));\n    });\n    // webpack config with babel's react and es2015 presets, and some optimizations.\n    // bundles into client/bundle.js\n    const webpackConfig = {\n      module: {\n        loaders: [\n          { \n            test: /\\.jsx?$/,\n            loader: 'babel-loader',\n            exclude: /(node_modules|bower_components)/,\n            include: /components/,\n            query: {\n              presets: ['react', 'es2015'],\n            }\n          }\n        ]\n      },\n      plugins: [\n        new webpack.DefinePlugin({\n          'process.env': {\n            'NODE_ENV': JSON.stringify('production')\n          }\n        }),\n        new webpack.optimize.OccurenceOrderPlugin(),\n        new webpack.optimize.UglifyJsPlugin(),\n      ],\n      output: {\n        filename: 'bundle.js'\n      }\n    };\n\n\nOLD: \n\nOkay, so this is what is bugging me:\n\nHaving just a single js file that controls everything from jquery to bootstrap to react to my own components to even images, css and fonts, seems to be very scary thing to do. Browsers in my opinion handle all that very nicely, but including CSS into a style tag via JS seems to be obviously slower with not many benefits, not to mention several build processes required to do something which 2 script tags and 1 link tag were doing previously. \n\nI find all this really complicated as opposed to webcomponents strategy where HTML is in HTML, JS in JS and CSS in CSS. \n\nIs this really all about the ease of using `import/export` and `require`ing everything? \n\nHonestly I get overwhelmed by all the processes needed to create a simple webapp using react, and can't follow much. I tried understand react-starter-kit but then again it was beyond my understanding ! My patience broke when I just wanted to add a backgroundImage to a div tag using a local image! \n\nCan someone explain to me why this single `bundle.js` era is becoming popular and how is it better than the traditional ways of creating web apps? Are there any sources that breakdown react-starter-kit in a simpler way to understand?\n\nSorry for not being able to clearly explain my doubts coz I'm hell confused. ",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xp5ac",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "bogas04",
                    "media": null,
                    "score": 36,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "num_comments": 40,
                    "thumbnail": "self",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": 1450719461,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "stickied": false,
                    "from": null,
                    "is_self": true,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xp5ac/i_find_webpack_setup_to_be_really_complicated/",
                    "locked": false,
                    "name": "t3_3xp5ac",
                    "created": 1450731192,
                    "url": "https://www.reddit.com/r/reactjs/comments/3xp5ac/i_find_webpack_setup_to_be_really_complicated/",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "I find webpack setup to be really complicated",
                    "created_utc": 1450702392,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 36
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "self.reactjs",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have spent some time learning and playing with React and Redux. &lt;/p&gt;\n\n&lt;p&gt;The Flux/Redux paradigm, whereby a read-only model is regenerated by reducers in response to actions has some great advantages and possibilities including - no spooky state interactions, forward/reverse debugging and the potential to replay action sequences for manual or automated tests.&lt;/p&gt;\n\n&lt;p&gt;I am now thinking about porting an app that has a heavy dependency on a big OO Javascript component that is too complicated and has too-much domain-knowledge represented to consider rewriting to fit the flux/redux paradigm. &lt;/p&gt;\n\n&lt;p&gt;Is there any experience or guidance on how such a third-party component might be integrated into the Flux/Redux lifecycle?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "selftext": "I have spent some time learning and playing with React and Redux. \n\nThe Flux/Redux paradigm, whereby a read-only model is regenerated by reducers in response to actions has some great advantages and possibilities including - no spooky state interactions, forward/reverse debugging and the potential to replay action sequences for manual or automated tests.\n\nI am now thinking about porting an app that has a heavy dependency on a big OO Javascript component that is too complicated and has too-much domain-knowledge represented to consider rewriting to fit the flux/redux paradigm. \n\nIs there any experience or guidance on how such a third-party component might be integrated into the Flux/Redux lifecycle?",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xqxnf",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "french_commander",
                    "media": null,
                    "score": 8,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "num_comments": 4,
                    "thumbnail": "self",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": 1450731171,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "stickied": false,
                    "from": null,
                    "is_self": true,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xqxnf/how_would_you_integrate_a_complex_stateful_legacy/",
                    "locked": false,
                    "name": "t3_3xqxnf",
                    "created": 1450759546,
                    "url": "https://www.reddit.com/r/reactjs/comments/3xqxnf/how_would_you_integrate_a_complex_stateful_legacy/",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "How would you integrate a complex stateful legacy component into React/Redux framework lifecycle?",
                    "created_utc": 1450730746,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 8
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "bvaughn.github.io",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": null,
                    "selftext": "",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xqbo0",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "brianvaughn",
                    "media": null,
                    "score": 3,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "num_comments": 1,
                    "thumbnail": "default",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "stickied": false,
                    "from": null,
                    "is_self": false,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xqbo0/filterable_log_monitor_for_redux_devtools/",
                    "locked": false,
                    "name": "t3_3xqbo0",
                    "created": 1450750709,
                    "url": "http://bvaughn.github.io/redux-devtools-filterable-log-monitor/",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "Filterable log monitor for Redux Devtools",
                    "created_utc": 1450721909,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 3
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "medium.com",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": null,
                    "selftext": "",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xr7sf",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "cut-copy-paste",
                    "media": null,
                    "score": 2,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://i.redditmedia.com/KtxW0LoVk6nYPxUgJZxgVPaMKdjG3u_17mLD0nsOp1Q.jpg?s=922fbc20f9da6adc1aa27887972d1c03",
                                    "width": 800,
                                    "height": 339
                                },
                                "resolutions": [
                                    {
                                        "url": "https://i.redditmedia.com/KtxW0LoVk6nYPxUgJZxgVPaMKdjG3u_17mLD0nsOp1Q.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=d2a7f7c23dfe29acd2627d8496c81a98",
                                        "width": 108,
                                        "height": 45
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/KtxW0LoVk6nYPxUgJZxgVPaMKdjG3u_17mLD0nsOp1Q.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=bf0a4319e943a618a0456898df635080",
                                        "width": 216,
                                        "height": 91
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/KtxW0LoVk6nYPxUgJZxgVPaMKdjG3u_17mLD0nsOp1Q.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=490d53e3f5142e5cc9cf2e039630c172",
                                        "width": 320,
                                        "height": 135
                                    },
                                    {
                                        "url": "https://i.redditmedia.com/KtxW0LoVk6nYPxUgJZxgVPaMKdjG3u_17mLD0nsOp1Q.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=ece3a9ab156abe0217d76650a659b2d8",
                                        "width": 640,
                                        "height": 271
                                    }
                                ],
                                "variants": {},
                                "id": "7H_tz7sDgeTdLiYQAlelrYz7PLBfO_vHbN3H8G0KmJ4"
                            }
                        ]
                    },
                    "num_comments": 0,
                    "thumbnail": "http://b.thumbs.redditmedia.com/FNlF6t507oPoa_Iy8YwJouodMqjIz5qAvC8AUeWmCXw.jpg",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "post_hint": "link",
                    "stickied": false,
                    "from": null,
                    "is_self": false,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xr7sf/xpost_i_officially_endorse_react_for_president/",
                    "locked": false,
                    "name": "t3_3xr7sf",
                    "created": 1450763738,
                    "url": "https://medium.com/bread-crumbs/i-officially-endorse-react-for-president-9c103e4568d4#.ud7d7dr2w",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "X-Post: I Officially Endorse React for President!",
                    "created_utc": 1450734938,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 2
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "self.reactjs",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;To anyone familiar with redux:\nI understand the application tree&amp;#39;s state is supposed to be represented in one redux store. With that being said, I have multiple related entities, one of which has a multi-step form for it&amp;#39;s creation (which I was using state on a parent component to manage). &lt;/p&gt;\n\n&lt;p&gt;Should this be represented as a separate object in the state tree, or should a partial record be saved to the collection with a &lt;del&gt;flash&lt;/del&gt; &lt;em&gt;flag&lt;/em&gt; of some sort to designate it&amp;#39;s unfinished state?&lt;/p&gt;\n\n&lt;p&gt;I posted this in the Facebook group, to no avail. Sorry if you read this twice because of that.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "selftext": "To anyone familiar with redux:\nI understand the application tree's state is supposed to be represented in one redux store. With that being said, I have multiple related entities, one of which has a multi-step form for it's creation (which I was using state on a parent component to manage). \n\nShould this be represented as a separate object in the state tree, or should a partial record be saved to the collection with a ~~flash~~ *flag* of some sort to designate it's unfinished state?\n\nI posted this in the Facebook group, to no avail. Sorry if you read this twice because of that.",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xp1o0",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "pil4trees",
                    "media": null,
                    "score": 8,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "num_comments": 19,
                    "thumbnail": "self",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": 1450703961,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "stickied": false,
                    "from": null,
                    "is_self": true,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xp1o0/redux_state_structure_clarification/",
                    "locked": false,
                    "name": "t3_3xp1o0",
                    "created": 1450728851,
                    "url": "https://www.reddit.com/r/reactjs/comments/3xp1o0/redux_state_structure_clarification/",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "Redux state structure clarification",
                    "created_utc": 1450700051,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 8
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "stanleycyang.com",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": null,
                    "selftext": "",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xnshk",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "stanleycyang",
                    "media": null,
                    "score": 28,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "num_comments": 17,
                    "thumbnail": "default",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "stickied": false,
                    "from": null,
                    "is_self": false,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xnshk/mastering_react_redux/",
                    "locked": false,
                    "name": "t3_3xnshk",
                    "created": 1450699497,
                    "url": "https://www.stanleycyang.com/tutorials/mastering-react-redux",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "Mastering React Redux",
                    "created_utc": 1450670697,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 28
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "self.reactjs",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m in the middle of refactoring a medium-sized (~3000 lines) React/Reflux app at my company. My long term goal is to switch it over to Redux, but since the app is already in production I don&amp;#39;t want to do a &amp;quot;big bang&amp;quot; release.&lt;/p&gt;\n\n&lt;p&gt;Management of stores, component props, component state, and actions have sort of been haphazard up to now due to the team not communicating about the way we want to do things. Everyone just did what was needed to finish the feature they were working on, and moved on.&lt;/p&gt;\n\n&lt;p&gt;My strategies for refactoring so far have been these:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Push store subscriptions and component state as far up the tree as possible, and pass data down as props instead. This might mean that the store is far apart from where its data is used in the hierarchy, and all the components between the component that subscribes to the store and the component that uses the data must pass-through those props for their children. Ideally, I would like to get to a point where my single top-level component listens to all my stores and passes everything down to its children and their sub-components through props. This will (I think) make the eventual move to Redux less of a shock.&lt;/li&gt;\n&lt;li&gt;Make all actions &amp;quot;fire-and-forget&amp;quot;. Right now, several of our actions require the caller to pass a &lt;code&gt;successCallback&lt;/code&gt; for something to be done after the action is completed. We are using Reflux&amp;#39;s &lt;code&gt;listenAndPromise&lt;/code&gt; helper to make API calls, so essentially it fires a &amp;lt;ACTION_NAME&amp;gt;Completed action when the call returns. This Completed action would then call the &lt;code&gt;successCallback&lt;/code&gt;. I think this is a terrible idea and requires the stores and components to know way too much about each other.&lt;/li&gt;\n&lt;li&gt;Once I have achieved the first two goals, I&amp;#39;m planning on migrating to Redux and using redux-react to provide the state to my top-level component. That way my whole component hierarchy is composed of pure components (except when component-specific &amp;quot;UI state&amp;quot; is needed, of course).&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Can anyone with more experience help me figure out if I&amp;#39;m on the right track? Will any of the things I mentioned come back and bite me later?&lt;/p&gt;\n\n&lt;p&gt;I appreciate the input.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "selftext": "I'm in the middle of refactoring a medium-sized (~3000 lines) React/Reflux app at my company. My long term goal is to switch it over to Redux, but since the app is already in production I don't want to do a \"big bang\" release.\n\nManagement of stores, component props, component state, and actions have sort of been haphazard up to now due to the team not communicating about the way we want to do things. Everyone just did what was needed to finish the feature they were working on, and moved on.\n\nMy strategies for refactoring so far have been these:\n\n1. Push store subscriptions and component state as far up the tree as possible, and pass data down as props instead. This might mean that the store is far apart from where its data is used in the hierarchy, and all the components between the component that subscribes to the store and the component that uses the data must pass-through those props for their children. Ideally, I would like to get to a point where my single top-level component listens to all my stores and passes everything down to its children and their sub-components through props. This will (I think) make the eventual move to Redux less of a shock.\n2. Make all actions \"fire-and-forget\". Right now, several of our actions require the caller to pass a `successCallback` for something to be done after the action is completed. We are using Reflux's `listenAndPromise` helper to make API calls, so essentially it fires a &lt;ACTION_NAME&gt;Completed action when the call returns. This Completed action would then call the `successCallback`. I think this is a terrible idea and requires the stores and components to know way too much about each other.\n3. Once I have achieved the first two goals, I'm planning on migrating to Redux and using redux-react to provide the state to my top-level component. That way my whole component hierarchy is composed of pure components (except when component-specific \"UI state\" is needed, of course).\n\nCan anyone with more experience help me figure out if I'm on the right track? Will any of the things I mentioned come back and bite me later?\n\nI appreciate the input.",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xpb3e",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "ksmithbaylor",
                    "media": null,
                    "score": 3,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "num_comments": 7,
                    "thumbnail": "self",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "stickied": false,
                    "from": null,
                    "is_self": true,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xpb3e/best_practices_for_propsstate/",
                    "locked": false,
                    "name": "t3_3xpb3e",
                    "created": 1450734649,
                    "url": "https://www.reddit.com/r/reactjs/comments/3xpb3e/best_practices_for_propsstate/",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "Best practices for props/state",
                    "created_utc": 1450705849,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 3
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "krasimirtsonev.com",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": null,
                    "selftext": "",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xp28x",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "krasimirtsonev",
                    "media": null,
                    "score": 5,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "preview": {
                        "images": [
                            {
                                "source": {
                                    "url": "https://i.redditmedia.com/3QYXoMXIfJZ7AlXzGF-N_1SSQo-XhLQ3E6KUM1nUMcw.jpg?s=53e02a166df2de69116722cd185c26a0",
                                    "width": 100,
                                    "height": 100
                                },
                                "resolutions": [],
                                "variants": {},
                                "id": "rMDoHl3Lp9Q-eo3APIQlhORnACgUt3hF_BRIKVr1E5A"
                            }
                        ]
                    },
                    "num_comments": 0,
                    "thumbnail": "http://b.thumbs.redditmedia.com/b6Hd4xJbWxWNWz_5bIsl6l-kDFKcLCKyfQKkYKkeVLI.jpg",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "post_hint": "link",
                    "stickied": false,
                    "from": null,
                    "is_self": false,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xp28x/dissection_of_flux_architecture_or_how_to_write/",
                    "locked": false,
                    "name": "t3_3xp28x",
                    "created": 1450729261,
                    "url": "http://krasimirtsonev.com/blog/article/dissection-of-flux-architecture-or-how-to-write-your-own-react",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "Dissection of Flux architecture or how to write your own",
                    "created_utc": 1450700461,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 5
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "self.reactjs",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m kind of new to React (but have used Angular before) and trying to wrap my head around component lifecycles. Lifecycles get confusing to me when you are nesting components in one another and child components need to be updated from changes in their parent. It&amp;#39;s not always intuitive that Child finishes rendering before Parent&amp;#39;s componentDidMount is called.&lt;/p&gt;\n\n&lt;p&gt;For a more concrete example I have an application set up with this component hierarchy:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Router -&amp;gt; &amp;#39;App&amp;#39; component -&amp;gt; Table/Home/etc. component&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;The Table component can be replaced with any other component (like a Home Page component) but the App component is always there. Based on the route, a different API URL is passed to the App component, which then loads via AJAX the data based on that URL. &lt;/p&gt;\n\n&lt;p&gt;The Table component is made to populate data from the AJAX call organized with arbitrary number of keys/columns. That works great when you load the Table the first time, but not the second time. The AJAX call from the App component loads the data &lt;em&gt;after&lt;/em&gt; the Table is done rendering, so the Table is stuck with the old data. It only then updates if I do a page refresh from the browser.&lt;/p&gt;\n\n&lt;p&gt;I could get around that by having the Table load its own data instead of the App from the componentDidMount method, but remember I could load other sub-components other than Table. So they would also need their own loading methods and I&amp;#39;d be repeating lots of code. I&amp;#39;d rather keep the App responsible for loading the data and passing it down and &lt;em&gt;then&lt;/em&gt; re-render the child to make sure it displays the data. How do you make that work?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "selftext": "I'm kind of new to React (but have used Angular before) and trying to wrap my head around component lifecycles. Lifecycles get confusing to me when you are nesting components in one another and child components need to be updated from changes in their parent. It's not always intuitive that Child finishes rendering before Parent's componentDidMount is called.\n\nFor a more concrete example I have an application set up with this component hierarchy:\n     \n&gt;Router -&gt; 'App' component -&gt; Table/Home/etc. component\n\nThe Table component can be replaced with any other component (like a Home Page component) but the App component is always there. Based on the route, a different API URL is passed to the App component, which then loads via AJAX the data based on that URL. \n\nThe Table component is made to populate data from the AJAX call organized with arbitrary number of keys/columns. That works great when you load the Table the first time, but not the second time. The AJAX call from the App component loads the data *after* the Table is done rendering, so the Table is stuck with the old data. It only then updates if I do a page refresh from the browser.\n\nI could get around that by having the Table load its own data instead of the App from the componentDidMount method, but remember I could load other sub-components other than Table. So they would also need their own loading methods and I'd be repeating lots of code. I'd rather keep the App responsible for loading the data and passing it down and *then* re-render the child to make sure it displays the data. How do you make that work?",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xqa1h",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "ccricers",
                    "media": null,
                    "score": 1,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "num_comments": 2,
                    "thumbnail": "self",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "stickied": false,
                    "from": null,
                    "is_self": true,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xqa1h/how_to_pass_data_loaded_from_parent_to_child/",
                    "locked": false,
                    "name": "t3_3xqa1h",
                    "created": 1450750100,
                    "url": "https://www.reddit.com/r/reactjs/comments/3xqa1h/how_to_pass_data_loaded_from_parent_to_child/",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "How to pass data loaded from parent to child component and make the child render with new data?",
                    "created_utc": 1450721300,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 1
                }
            },
            {
                "kind": "t3",
                "data": {
                    "domain": "self.reactjs",
                    "banned_by": null,
                    "media_embed": {},
                    "subreddit": "reactjs",
                    "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Switched over to Firebase hosting with https and MaxCDN. Site should be faster now...&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://react.rocks/example/cake-chart\"&gt;&lt;strong&gt;cake-chart&lt;/strong&gt;&lt;/a&gt;: Interactive multi-layer piechart visualization, like a treemap. Uses JSS, CSSTransitionGroup.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://react.rocks/example/Faceted_ecommerce_search\"&gt;&lt;strong&gt;Faceted_ecommerce_search&lt;/strong&gt;&lt;/a&gt;: Very fast Faceted search ecommerce demo: uses Algolia search with instantsearch.js react widgets.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://react.rocks/example/react-expandable-listview\"&gt;&lt;strong&gt;react-expandable-listview&lt;/strong&gt;&lt;/a&gt;: Combination List + Accordian. Uses react-motion for animation.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://react.rocks/example/react-infinity-menu\"&gt;&lt;strong&gt;react-infinity-menu&lt;/strong&gt;&lt;/a&gt;: Unlimited deep side menu. Tested with sinon, shallowRenderer.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://react.rocks/example/react-input-enhancements\"&gt;&lt;strong&gt;react-input-enhancements&lt;/strong&gt;&lt;/a&gt;: Useful enhancements to Input: Autosize, Autocomplete, Dropdown, Masking. Pairs well with react-bootstrap&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://react.rocks/example/react-motion-menu\"&gt;&lt;strong&gt;react-motion-menu&lt;/strong&gt;&lt;/a&gt;: Popup hamburger menu with engaging, fun animations.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://react.rocks/example/react-portal-tooltip\"&gt;&lt;strong&gt;react-portal-tooltip&lt;/strong&gt;&lt;/a&gt;: Well-done tooltips. Smooth animation between positions. Can customize arrow, positioning.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://react.rocks/example/react-textfit\"&gt;&lt;strong&gt;react-textfit&lt;/strong&gt;&lt;/a&gt;: Fit headlines and paragraphs into elements. Uses binary search to find correct fit. Works with any style- line-height, padding.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://react.rocks/example/reactunes-artwork-finder\"&gt;&lt;strong&gt;reactunes-artwork-finder&lt;/strong&gt;&lt;/a&gt;: ITunes art finder. Uses superagent, vanilla flux.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://react.rocks/example/redux-search\"&gt;&lt;strong&gt;redux-search&lt;/strong&gt;&lt;/a&gt;: Higher-order Redux library for searching collections of objects. Search is done in a webworker. Can watch, re-index redux stores.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://react.rocks/example/shifted-maps\"&gt;&lt;strong&gt;shifted-maps&lt;/strong&gt;&lt;/a&gt;: Visualizes personal movement data showing visited places and their connections. Mapbox, redux. Backend uses Express, Mongoose.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://react.rocks/example/Visualising_a_tree_structure\"&gt;&lt;strong&gt;Visualising_a_tree_structure&lt;/strong&gt;&lt;/a&gt;: Blog about writing a tree control-Redux/ImmutableJS for high-performance updating.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
                    "selftext": "Switched over to Firebase hosting with https and MaxCDN. Site should be faster now...\n\n\n[**cake-chart**](http://react.rocks/example/cake-chart): Interactive multi-layer piechart visualization, like a treemap. Uses JSS, CSSTransitionGroup.\n\n[**Faceted_ecommerce_search**](http://react.rocks/example/Faceted_ecommerce_search): Very fast Faceted search ecommerce demo: uses Algolia search with instantsearch.js react widgets.\n\n[**react-expandable-listview**](http://react.rocks/example/react-expandable-listview): Combination List + Accordian. Uses react-motion for animation.\n\n[**react-infinity-menu**](http://react.rocks/example/react-infinity-menu): Unlimited deep side menu. Tested with sinon, shallowRenderer.\n\n[**react-input-enhancements**](http://react.rocks/example/react-input-enhancements): Useful enhancements to Input: Autosize, Autocomplete, Dropdown, Masking. Pairs well with react-bootstrap\n\n[**react-motion-menu**](http://react.rocks/example/react-motion-menu): Popup hamburger menu with engaging, fun animations.\n\n[**react-portal-tooltip**](http://react.rocks/example/react-portal-tooltip): Well-done tooltips. Smooth animation between positions. Can customize arrow, positioning.\n\n[**react-textfit**](http://react.rocks/example/react-textfit): Fit headlines and paragraphs into elements. Uses binary search to find correct fit. Works with any style- line-height, padding.\n\n[**reactunes-artwork-finder**](http://react.rocks/example/reactunes-artwork-finder): ITunes art finder. Uses superagent, vanilla flux.\n\n[**redux-search**](http://react.rocks/example/redux-search): Higher-order Redux library for searching collections of objects. Search is done in a webworker. Can watch, re-index redux stores.\n\n[**shifted-maps**](http://react.rocks/example/shifted-maps): Visualizes personal movement data showing visited places and their connections. Mapbox, redux. Backend uses Express, Mongoose.\n\n[**Visualising_a_tree_structure**](http://react.rocks/example/Visualising_a_tree_structure): Blog about writing a tree control-Redux/ImmutableJS for high-performance updating.",
                    "likes": null,
                    "suggested_sort": null,
                    "user_reports": [],
                    "secure_media": null,
                    "link_flair_text": null,
                    "id": "3xpavi",
                    "from_kind": null,
                    "gilded": 0,
                    "archived": false,
                    "clicked": false,
                    "report_reasons": null,
                    "author": "winkler1",
                    "media": null,
                    "score": 1,
                    "approved_by": null,
                    "over_18": false,
                    "hidden": false,
                    "num_comments": 0,
                    "thumbnail": "self",
                    "subreddit_id": "t5_2zldd",
                    "hide_score": false,
                    "edited": false,
                    "link_flair_css_class": null,
                    "author_flair_css_class": null,
                    "downs": 0,
                    "secure_media_embed": {},
                    "saved": false,
                    "removal_reason": null,
                    "stickied": false,
                    "from": null,
                    "is_self": true,
                    "from_id": null,
                    "permalink": "/r/reactjs/comments/3xpavi/last_weeks_reactjs_examples/",
                    "locked": false,
                    "name": "t3_3xpavi",
                    "created": 1450734538,
                    "url": "https://www.reddit.com/r/reactjs/comments/3xpavi/last_weeks_reactjs_examples/",
                    "author_flair_text": null,
                    "quarantine": false,
                    "title": "Last Week's ReactJS Examples",
                    "created_utc": 1450705738,
                    "distinguished": null,
                    "mod_reports": [],
                    "visited": false,
                    "num_reports": null,
                    "ups": 1
                }
            }
        ],
        "after": "t3_3xpavi",
        "before": null
    }
}
    res.status(200).json({...data});
});
